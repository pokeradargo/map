input {
  file {
    type => "laravel"
    path => "/data/katana/storage/logs/laravel*.log"
    start_position => "beginning"
    codec => multiline {
      pattern => "^\["
      negate => true
      what => "previous"
    }
  }
  file {
    type => "supervisor-laravel"
    path => "/data/katana/docker/supervisord/var-log/katana*.log"
    start_position => "beginning"
    codec => multiline {
      pattern => "^\["
      negate => true
      what => "previous"
    }
  }
  file {
    type => "supervisor-local"
    path => "/data/katana/docker/supervisord/var-log/supervisor*.log"
    start_position => "beginning"
  }
  file {
    type => "katana-web-access"
    path => "/data/katana/docker/nginx/var-log/katana-access.log"
    start_position => "beginning"
  }
  file {
    type => "katana-web-error"
    path => "/data/katana/docker/nginx/var-log/katana-error.log"
    start_position => "beginning"
  }
}

filter {
  json {
    source => "message[0]"
  }
  if [type] == "laravel" or [type] == "supervisor-laravel"  {
    grok {
      # Parse timestamp data. We need the "(?m)" so that grok (Oniguruma internally) correctly parses multi-line events
      match => [ "message", "(?m)%{YEAR:yyyy}-%{MONTHNUM:MM}-%{MONTHDAY:dd} %{HOUR:HH}:?%{MINUTE:mm}:?%{SECOND:ss}" ]
    }
    mutate {
      add_field => {
        "timestamp" => "%{yyyy}-%{MM}-%{dd}T%{HH}:%{mm}:%{ss}Z"
      }
    }
    date {
      match => ["timestamp", "yyyy-MM-dd'T'HH:mm:ss'Z'"]
      target => "@timestamp"
    }
  }
  if [type] == "supervisor" {
    grok {
      # Parse timestamp data. We need the "(?m)" so that grok (Oniguruma internally) correctly parses multi-line events
      match => [ "message", "%{YEAR:yyyy}-%{MONTHNUM:MM}-%{MONTHDAY:dd} %{HOUR:HH}:?%{MINUTE:mm}:?%{SECOND:ss}" ]
    }
    mutate {
      add_field => {
        "timestamp" => "%{yyyy}-%{MM}-%{dd}T%{HH}:%{mm}:%{ss}Z"
      }
    }
    date {
      match => ["timestamp", "yyyy-MM-dd'T'HH:mm:ss,SSS'Z'"]
      target => "@timestamp"
    }
  }
  if [type] == "katana-web-access" {
    grok {
      # Parse timestamp data. We need the "(?m)" so that grok (Oniguruma internally) correctly parses multi-line events
      match => [ "message", "%{MONTHDAY:dd}/%{MONTH:MMM}/%{YEAR:yyyy}:%{TIME:time}" ]
    }
    mutate {
      add_field => {
        "timestamp" => "%{yyyy}-%{MMM}-%{dd}T%{time}Z"
      }
    }
    date {
      match => ["timestamp", "yyyy-MMM-dd'T'HH:mm:ss'Z'"]
      target => "@timestamp"
    }
  }
  if [type] == "katana-web-error" {
    grok {
      # Parse timestamp data. We need the "(?m)" so that grok (Oniguruma internally) correctly parses multi-line events
      match => [ "message", "%{YEAR:yyyy}/%{MONTHNUM:MM}/%{MONTHDAY:dd} %{TIME:time}" ]
    }
    mutate {
      add_field => {
        "timestamp" => "%{yyyy}-%{MM}-%{dd}T%{time}Z"
      }
    }
    date {
      match => ["timestamp", "yyyy-MM-dd'T'HH:mm:ss'Z'"]
      target => "@timestamp"
    }
  }
  mutate {
    remove_field => ["yyyy","MM","dd","HH","mm","ss", "timestamp" ]
  }
}

output {
  elasticsearch {
    hosts => ["elastic-search-master-dev.sandbox:9200"]
    index => "logstash-%{+YYYY.MM-ww}"
  }
}